<!DOCTYPE html>
<html>
  <head>
    <!--
      For demonstration purposes, the `title` is dynamically set here based on
      your `sails.config.appName` to show that you can inject data into layouts
      exactly the same way as with your other view templates.
    -->
    <title><%- title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <link rel="stylesheet" href="styles/foundation2.css" />
    <link rel="stylesheet" href="styles/pace.css" />
    <script src="js/vendor/modernizr.js"></script>
    <script type='text/javascript' src='js/vendor/jquery-1.10.2.js'></script>
    <script src="js/vendor/underscore.js"></script>
    <script src="js/vendor/pace.min.js"></script>
    <script>
      _.templateSettings = {
        escape: /\{\{\-(.+?)\}\}/g,
        interpolate: /\{\{\=(.+?)\}\}/g,
        evaluate: /\{\{(.+?)\}\}/g,
        escape: /\{\{\-(.+?)\}\}/g
      };
    </script>
    <script src="js/vendor/backbone.js"></script>
    <script type="text/javascript" src="js/s3upload.js"></script>

    <!--
      Stylesheets
      ========================     
    -->
    <link rel="stylesheet" type="text/css" href="styles/overlay_css_timela.css" /> 

  </head>

  <body>
    
    <script src="/js/vendor/backbone.iosync.js"></script>
    <script src="/js/vendor/backbone.iobind.js"></script>
    <script type="text/javascript" src="js/vendor/socket.io.js"></script>
    <script type="text/javascript" src="js/sails.io.js"></script>
    <script type="text/javascript" src="js/BB_app/app.js"></script>
    <!-- Global objects -->
    <script src="js/BB_app/global_functions.js"></script>
    <script src="js/BB_app/global_models.js"></script>
    <script src="js/BB_app/global_collections.js"></script>

    <%- body %>
  

    <script>
      /////////////////////////////////////////////////////////////////////////////////////////////
      // Realtime connection
      /////////////////////////////////////////////////////////////////////////////////////////////
      function rt (io, callback) {
        // as soon as this file is loaded, connect automatically, 
        var socket = io.connect();
        socket.on('connect', function socketConnected() {
          
          socket.get("/auth/openChannels", function(data){
            console.log(data.msg);
            console.log(data.channels);
          });
          // Notification
          socket.on('notification:create', function socketConnected(x) {console.log("xxxxxx",x)});
          // Knowledge
          socket.on('knowledge:create', function socketConnected(x) {console.log("xxxxxxxx-knowledge:create",x)});
          socket.on('knowledge:update', function socketConnected(x) {console.log("xxxxxxxx-knowledge:update",x)});
          socket.on('knowledge:remove2', function socketConnected(x) {console.log("xxxxxxxx-knowledge:remove",x)});
          // Concept
          socket.on('concept:create', function socketConnected(x) {console.log("xxxxxxxx-concept:create",x)});
          socket.on('concept:update', function socketConnected(x) {console.log("xxxxxxxx-concept:update",x)});
          socket.on('concept:remove2', function socketConnected(x) {console.log("xxxxxxxx-concept:remove",x)});
          // Category
          socket.on('poche:create', function socketConnected(x) {console.log("xxxxxxxx-poche:create",x)});
          socket.on('poche:update', function socketConnected(x) {console.log("xxxxxxxx-poche:update",x)});
          socket.on('poche:remove2', function socketConnected(x) {console.log("xxxxxxxx-poche:remove",x)});
          

          console.log(
            'Socket is now connected and globally accessible as `socket`.\n' + 
            'e.g. to send a GET request to Sails, try \n' + 
            '`socket.get("/", function (response) ' +
              '{ console.log(response); })`'
          );
          callback();
        });
        window.socket = socket;
      };
    </script>

    <script src="js/foundation.min.js"></script>
    <script src="js/foundation/foundation.joyride.js"></script>
    <script src="js/vendor/jquery.cookie.js"></script>
    <script src="js/foundation/foundation.abide.js"></script>
    <script>
      $(document).foundation();
    </script>


    <footer class="row">
      <hr>
      <div class="large-12 columns">
      <div class="row">
      <div class="large-5 columns">
      <p>Copyright © 2014 CreaKtive, Inc.</p>
      </div>
      <div class="large-7 columns">
      <ul class="inline-list right">
      <li><a href="http://creaktive.fr/">Terms of service</a></li>
      <li><a href="http://creaktive.fr/">Privacy Policy</a></li>
      <li><a href="http://creaktive.fr/contact/">FAQ</a></li>
      </ul>
      </div>
      </div>
      </div>
      </footer>

<script>
// Include the UserVoice JavaScript SDK (only needed once on a page)
UserVoice=window.UserVoice||[];(function(){var uv=document.createElement('script');uv.type='text/javascript';uv.async=true;uv.src='//widget.uservoice.com/FYdygsM9I2wGMsFkWgdpw.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(uv,s)})();

//
// UserVoice Javascript SDK developer documentation:
// https://www.uservoice.com/o/javascript-sdk
//

// Set colors
UserVoice.push(['set', {
  accent_color: '#448dd6',
  trigger_color: 'white',
  trigger_background_color: '#e23a39'
}]);

// Identify the user and pass traits
// To enable, replace sample data with actual user traits and uncomment the line
UserVoice.push(['identify', {
  //email:      'john.doe@example.com', // User’s email address
  //name:       'John Doe', // User’s real name
  //created_at: 1364406966, // Unix timestamp for the date the user signed up
  //id:         123, // Optional: Unique id of the user (if set, this should not change)
  //type:       'Owner', // Optional: segment your users by type
  //account: {
  //  id:           123, // Optional: associate multiple users with a single account
  //  name:         'Acme, Co.', // Account name
  //  created_at:   1364406966, // Unix timestamp for the date the account was created
  //  monthly_rate: 9.99, // Decimal; monthly rate of the account
  //  ltv:          1495.00, // Decimal; lifetime value of the account
  //  plan:         'Enhanced' // Plan name for the account
  //}
}]);

// Add default trigger to the bottom-right corner of the window:
UserVoice.push(['addTrigger', { mode: 'contact', trigger_position: 'bottom-right' }]);

// Or, use your own custom trigger:
//UserVoice.push(['addTrigger', '#id', { mode: 'contact' }]);

// Autoprompt for Satisfaction and SmartVote (only displayed under certain conditions)
UserVoice.push(['autoprompt', {}]);
</script>

    

  </body>
</html>
