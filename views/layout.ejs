<!DOCTYPE html>
<html>
  <head>
    <!--
      For demonstration purposes, the `title` is dynamically set here based on
      your `sails.config.appName` to show that you can inject data into layouts
      exactly the same way as with your other view templates.
    -->
    <title><%- title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <script src="js/vendor/modernizr.js"></script>
    <script type='text/javascript' src='js/vendor/jquery-1.10.2.js'></script>
    <script src="js/vendor/underscore.js"></script>
    <!-- sweet alert lib -->
    <script src="js/vendor/sweetAlert/sweet-alert.js"></script> 
    <link rel="stylesheet" type="text/css" href="styles/sweetAlert/sweet-alert.css">
    <!-- Notification lib -->
    <link rel="stylesheet" href="styles/notifications/normalize.css" />
    <link rel="stylesheet" href="styles/notifications/ns-default.css" />
    <link rel="stylesheet" href="styles/notifications/ns-style-attached.css" />
    <link rel="stylesheet" href="styles/notifications/ns-style-bar.css" />
    <link rel="stylesheet" href="styles/notifications/ns-style-growl.css" />
    <link rel="stylesheet" href="styles/notifications/ns-style-other.css" />
    <script src="js/vendor/notifications/classie.js"></script>
    <script src="js/vendor/notifications/notificationFx.js"></script>
    <script src="js/vendor/notifications/snap.svg-min.js"></script>
    <script src="js/vendor/notifications/notif.js?v=<%= sails.config.session.version %>"></script>
    <!-- foundation lib -->
    <link rel="stylesheet" href="styles/foundation2.css" />
    <link rel="stylesheet" href="styles/pace.css" />


    <!-- tqtip2 -->
    <link type="text/css" rel="stylesheet" href="qtip2/jquery.qtip.css" />
    <script type="text/javascript" src="qtip2/jquery.qtip.js"></script>
    <script type="text/javascript" src="qtip2/imagesloaded.pkg.min.js"></script>



    <script src="js/vendor/pace.min.js"></script>
    <script src="js/vendor/screenfull.js"></script>
    <script>
      _.templateSettings = {
        escape: /\{\{\-(.+?)\}\}/g,
        interpolate: /\{\{\=(.+?)\}\}/g,
        evaluate: /\{\{(.+?)\}\}/g,
        escape: /\{\{\-(.+?)\}\}/g
      };
    </script>
    <script src="js/vendor/backbone.js"></script>
    <script type="text/javascript" src="js/s3upload.js"></script>

    <!--
      Stylesheets
      ========================     
    -->
    <link rel="stylesheet" type="text/css" href="styles/overlay_css_timela.css?v=<%= sails.config.session.version %>" /> 



  </head>
  <body>
    <!-- ========================  
            TrackJS 
    ========================  -->
    <script>
      window._trackJs = {
        // Whether to send errors to TrackJS
        enabled: false,// <---------------------------- here put a true in production
        // Custom error callback
        onError: function () { return true; },
        // Custom object serialization
        serialize: function (what) { return what.toString(); },
        // Custom session identifier.
        sessionId: "",
        // Your TrackJS token
        token: "",
        // An application key (optional)
        application: "",
        // Custom user identifier.
        userId: "",
        // Custom application version identifier.
        version: "",
        callback: {
          // Watch host-function callbacks for errors
          enabled: true,
          // Whether to capture extended stacktraces
          bindStack: false
        },
        console: {
          // Watch the console for events
          enabled: false,
          // Pass console messages through to the browser
          display: true,
          // Transmit console errors to TrackJS
          error: false, // <---------------------------- here put a true in production
          // Names of console functions to watch
          watch: ["log","debug","info","warn","error"]
        },
        network: {
          // Watch the network for events
          enabled: true,
          // Transmit network failures to TrackJS
          error: true
        },
        visitor: {
          // Watch visitor interactions for events
          enabled: true
        },
        window: {
          // Watch the window for global errors
          enabled: true
        }
      };
    </script>

    <script type="text/javascript" crossorigin="anonymous" src="//d2zah9y47r7bi2.cloudfront.net/releases/current/tracker.js" data-token="8faefdd629724a7993025c6b51c82b3b"></script>
    <!-- ========================  
            end TrackJS 
    ========================  -->
    <script src="/js/vendor/backbone.iosync.js"></script>
    <script src="/js/vendor/backbone.iobind.js"></script>
    <script type="text/javascript" src="js/vendor/socket.io.js"></script>
    <script type="text/javascript" src="js/sails.io.js"></script>
    <script type="text/javascript" src="js/BB_app/api.js?v=<%= sails.config.session.version %>"></script>
    <script type="text/javascript" src="js/BB_app/app.js?v=<%= sails.config.session.version %>"></script>
    <!-- Global objects -->
    <script src="js/BB_app/global_functions.js?v=<%= sails.config.session.version %>"></script>
    <script src="js/BB_app/global_models.js?v=<%= sails.config.session.version %>"></script>
    <script src="js/BB_app/global_collections.js?v=<%= sails.config.session.version %>"></script>

    <!-- ////////////////////// -->
    <!-- Menu -->
    <%- partial('app/templates/activitiesList_templates') %>
    <script type="text/javascript" src="js/BB_app/modules/activitiesList.js?v=<%= sails.config.session.version %>"></script>

    <%- partial('app/templates/topbar_templates.ejs') %>
    <script src="js/BB_app/modules/topbar.js?v=<%= sails.config.session.version %>"></script>

    <%- partial('app/templates/workspacesList_templates.ejs') %>
    <script src="js/BB_app/modules/workspacesList.js?v=<%= sails.config.session.version %>"></script>
    
    <%- partial('app/templates/actionMenu_templates.ejs') %>
    <script src="js/BB_app/modules/actionMenu.js?v=<%= sails.config.session.version %>"></script>
    
    <%- body %>
    
    <script>

      /////////////////////////////////////////////////////////////////////////////////////////////
      // Realtime connection
      /////////////////////////////////////////////////////////////////////////////////////////////
      function rt (io, callback) {
        // as soon as this file is loaded, connect automatically, 
        var socket = io.connect();
        //socket.on("user:update",function(){alert('user update')});
        

        socket.on("disconnect", function(msg){
          // setTimeout(function(){swal("Problem!", "Connection with the server lost, please check your internet connection!", "error");
          // },5000);
          // setTimeout(function(){
          //   //alert("Connection with the server lost, please check your internet connection");
          //   window.parent.location.reload();
          // },30000);

        });

        socket.on("reconnect_failed", function(msg){
          // swal("Problem!", "Connection with the server lost, please check your internet connection!", "error");
          // //alert("Connection with the server lost, please check your internet connection");
          // window.parent.location.reload();
        });

        socket.on('connect', function socketConnected() {
      
          socket.get("/auth/openChannels", function(data){
            console.log(data.msg);
            console.log(data.channels);
          });
          
          console.log(
            'Socket is now connected and globally accessible as `socket`.\n' + 
            'e.g. to send a GET request to Sails, try \n' + 
            '`socket.get("/", function (response) ' +
              '{ console.log(response); })`'
          );
          callback();
        });
        window.socket = socket;
      };
    </script>

    <script src="js/foundation.min.js"></script>
    <script src="js/foundation/foundation.joyride.js?v=<%= sails.config.session.version %>"></script>
    <script src="js/vendor/jquery.cookie.js"></script>
    <script src="js/foundation/foundation.abide.js"></script>

    <script>
      $(document).foundation();
      // Backbone.Collection.prototype.debugEvents = Backbone.Model.prototype.debugEvents = Backbone.View.prototype.debugEvents = Backbone.Router.prototype.debugEvents = function() {
      //   this.on('all', function(eventName) {
      //     console.log('event "' + eventName + '" with ',
      //       Array.prototype.slice.call(arguments, 1)
      //     );
      //   });
      // }
      //Then use it:

      // var model = new Backbone.Model();
      // model.debugEvents();

      // model.trigger('change', 'foo', 'bar'); // event "change" with ['foo', 'bar']
    </script>


    

  <script>
    // Include the UserVoice JavaScript SDK (only needed once on a page)
    UserVoice=window.UserVoice||[];(function(){var uv=document.createElement('script');uv.type='text/javascript';uv.async=true;uv.src='//widget.uservoice.com/FYdygsM9I2wGMsFkWgdpw.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(uv,s)})();

    //
    // UserVoice Javascript SDK developer documentation:
    // https://www.uservoice.com/o/javascript-sdk
    //

    // Set colors
    UserVoice.push(['set', {
      accent_color: '#448dd6',
      trigger_color: 'white',
      trigger_background_color: '#e23a39'
    }]);

    // Identify the user and pass traits
    // To enable, replace sample data with actual user traits and uncomment the line
    UserVoice.push(['identify', {
      //email:      'john.doe@example.com', // User’s email address
      //name:       'John Doe', // User’s real name
      //created_at: 1364406966, // Unix timestamp for the date the user signed up
      //id:         123, // Optional: Unique id of the user (if set, this should not change)
      //type:       'Owner', // Optional: segment your users by type
      //account: {
      //  id:           123, // Optional: associate multiple users with a single account
      //  name:         'Acme, Co.', // Account name
      //  created_at:   1364406966, // Unix timestamp for the date the account was created
      //  monthly_rate: 9.99, // Decimal; monthly rate of the account
      //  ltv:          1495.00, // Decimal; lifetime value of the account
      //  plan:         'Enhanced' // Plan name for the account
      //}
    }]);

    // Add default trigger to the bottom-right corner of the window:
    UserVoice.push(['addTrigger', { mode: 'contact', trigger_position: 'bottom-right' }]);

    // Or, use your own custom trigger:
    //UserVoice.push(['addTrigger', '#id', { mode: 'contact' }]);

    // Autoprompt for Satisfaction and SmartVote (only displayed under certain conditions)
    UserVoice.push(['autoprompt', {}]);
  </script>
  <script>
  
    var releases = {
      //n1 : {
      //  id :"1",
      //  pathname:"/",
      //  wrapper:document.body,
      //  message:'<b>News !</b><p>Images from the web associated with the name of your project are now visible //below your project description<img title="Images from the web" src="/img/notifs/n1.png"/></p>',
      //  layout:'attached',
      //  effect:'flip',
      //  type:'notice',
      //  ttl:10000,
      //  archiveButton:true
      //},
      // n2 : {
      //   id :"2",
      //   pathname : "/bbmap",
      //   wrapper:document.body,
      //   message:'<b>News !</b><p>A new tab in the menu on the right sidebar shows you the web data associated to the selectionned concept<img title="Images from the web" src="/img/notifs/n2.png"/></p>',
      //   layout:'attached',
      //   effect:'flip',
      //   type:'notice',
      //   ttl:10000,
      //   archiveButton:true
      // }
    };
    
    nlib.showByPathname(releases);
  </script>
 
  </body>
</html>
